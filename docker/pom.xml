<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>k8s-app-study-parent</artifactId>
        <groupId>io.demo</groupId>
        <version>1.0-SNAPSHOT</version>
        <!--<relativePath>../pom.xml</relativePath>-->
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>app-docker-image</artifactId>
    <!--<packaging>jar</packaging>-->
    <version>1.0-SNAPSHOT</version>
    <name>${project.groupId}:${project.artifactId}</name>

    <dependencies>
        <dependency>
            <groupId>io.demo</groupId>
            <artifactId>business-demo-app</artifactId>
            <version>1.0-SNAPSHOT</version>
            <classifier>exec</classifier>
        </dependency>
    </dependencies>


    <!-- https://blog.csdn.net/alinyua/article/details/81094240 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>business-demo-app</includeArtifactIds>
                            <!-- 此目录下的 artifacts 被加入到 docker build context 被build 进入 docker image -->
                            <outputDirectory>${project.basedir}/src/main/docker</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <stripVersion>true</stripVersion>
                    <stripClassifier>true</stripClassifier>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.33.0</version>

                <!--全局配置-->
                <configuration>
                    <!--这一部分是为了实现对远程docker容器的控制-->
                    <!--docker主机地址,用于完成docker各项功能,注意是tcp不是http!-->
                    <!-- <dockerHost>tcp://公网IP:2376</dockerHost> -->
                    <!--docker远程访问所需证书地址,如果docker远程主机没有启用TLS验证则不需要配证书-->
                    <!-- <certPath>${project.basedir}/docker/ssh</certPath> -->

                    <!--这一部分是为了实现docker镜像的构建和推送-->
                    <!--registry地址,用于推送,拉取镜像,我这里用的是阿里的registry-->
                    <!-- <registry>registry.cn-shenzhen.aliyuncs.com</registry> -->
                    <!--认证配置,用于私有registry认证,如果忘记了可以去阿里的registry查看-->
                    <!--<authConfig>-->
                    <!--<push>-->
                    <!--<username>这里填registry的用户名</username>-->
                    <!--<password>这里填registry的密码</password>-->
                    <!--</push>-->
                    <!--</authConfig>-->

                    <!--镜像相关配置,支持多镜像-->
                    <images>
                        <!-- 单个镜像配置 -->
                        <image>
                            <!--镜像名(含版本号)-->
                            <name>${project.artifactId}:1.0</name>
                            <!--别名:用于容器命名和在docker-compose.yml文件只能找到对应名字的配置-->
                            <!--<alias>${project.name}</alias>-->
                            <!--镜像build相关配置-->
                            <build>
                                <!--使用dockerFile文件-->
                                <!-- 默认docker build context 为 Dockerfile 上级目录 -->
                                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                                <assembly>
                                    <!-- 添加需要加入到 docker build context 中的文件的路径  -->
                                    <targetDir>${project.basedir}/src/main/docker</targetDir>
                                </assembly>
                            </build>
                            <!--配置docker-compose文件-->
                            <!--<external>-->
                            <!--<type>compose</type>-->
                            <!--<basedir>${project.basedir}/docker</basedir>-->
                            <!--<composeFile>docker-compose.yml</composeFile>-->
                            <!--</external>-->
                            <!--容器run相关配置-->
                            <!--<run>-->
                            <!--&lt;!&ndash;配置运行时容器命名策略为:别名,如果不指定则默认为none,即使用随机分配名称&ndash;&gt;-->
                            <!--<namingStrategy>alias</namingStrategy>-->
                            <!--</run>-->
                        </image>
                    </images>
                </configuration>
                <dependencies>
                    <!--该插件需要这个依赖-->
                    <dependency>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                        <version>1.11</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>